{
  "files": {
    "soma_moldura.py": {
      "category": "answer",
      "data": "# coding: utf-8\n# Aluno: Rodrigo Eloy Cavalcanti\n# Matr\u00edcula: 118210111\n# Soma moldura k\n\ndef soma_moldura(matriz, nivel):\n    soma  = 0\n    if len(matriz[0]) != len(matriz):\n        return soma\n    \n    for linha in range(nivel, len(matriz) - nivel):\n        for indice in range(nivel,len(matriz[linha]) - nivel):\n            if linha == nivel or indice == nivel or \\\n            linha == len(matriz) - 1 - nivel or indice == len(matriz) - 1 - nivel:\n                soma += matriz[linha][indice]\n\n\n  \n    return soma \n\n\n\n\n\n\nM = [[1,  2,  3,  4 ], [5,  6,  7,  8 ], [9,  10, 11, 12], [14, 15, 16, 17]]\nprint soma_moldura(M, 1)",
      "name": "soma_moldura.py"
    },
    "public_tests.py": {
      "category": "public",
      "data": "import unittest\nimport sys\n\nundertest = __import__(sys.argv[-1].split(\".py\")[0])\nsoma_moldura = getattr(undertest, 'soma_moldura', None)\n\nclass PublicTests(unittest.TestCase):\n\n    def test_exemplo(self):\n        M = [[1,  2,  3,  4 ], [5,  6,  7,  8 ], [9,  10, 11, 12], [14, 15, 16, 17]]\n        assert soma_moldura(M, 0) == 106\n\n    def test_exemplo2(self):\n        M = [[1,  2,  3,  4 ], [5,  6,  7,  8 ], [9,  10, 11, 12], [14, 15, 16, 17]]\n        assert soma_moldura(M, 0) == 106\n        assert soma_moldura(M, 1) == 34\n     \nif __name__ == '__main__':\n    loader = unittest.TestLoader()\n    runner = unittest.TextTestRunner()\n    runner.run(loader.loadTestsFromModule(sys.modules[__name__]))\n"
    }
  },
  "kind": "assignment",
  "name": null,
  "checksum": "3d56d6c8d2d8bae81c62ede9f5337d71",
  "iid": 5816385376616448,
  "activity_revision": "1.0.3"
}