{
  "files": {
    "public_tests.py": {
      "category": "public",
      "data": "import unittest\nimport sys\n\nundertest = __import__(sys.argv[-1].split(\".py\")[0])\nbusca_todos_por_coluna_em_matriz = getattr(undertest, 'busca_todos_por_coluna_em_matriz', None)\n\nclass AcceptanceTests(unittest.TestCase):\n\n    def test_exemplo_1(self):\n        m = [ [2, 3, 5, 3, 1], [3, 2, 1, 5, 6], [3, 2, 3, 2, 1] ]\n        assert busca_todos_por_coluna_em_matriz(m, 4) == []\n\nif __name__ == '__main__':\n    loader = unittest.TestLoader()\n    runner = unittest.TextTestRunner()\n    runner.run(loader.loadTestsFromModule(sys.modules[__name__]))\n",
      "name": "public_tests.py"
    },
    "busca_coluna.py": {
      "category": "answer",
      "data": "# coding: utf-8\n# Aluno: Rodrigo Eloy Cavalcanti\n# Matr\u00edcula: 118210111\n# Busca por coluna\n\ndef busca_todos_por_coluna_em_matriz(matriz, numero):\n    lista_saida = []\n    coluna = 0\n    linha = 0\n    while True:\n        if matriz[coluna][linha] == numero:\n            lista_saida.append((coluna, linha))\n\n        coluna += 1\n\n        if coluna == len(matriz) - 1 and linha != len(matriz[0]) - 1:\n            if matriz[coluna][linha] == numero:\n                lista_saida.append((coluna, linha))\n            linha += 1\n            coluna = 0\n\n        elif coluna == len(matriz) - 1 and linha == len(matriz[0]) - 1: \n            if matriz[-1][-1] == numero:\n                lista_saida.append((coluna, linha))\n            break\n\n    return lista_saida",
      "name": "busca_coluna.py"
    }
  },
  "kind": "assignment",
  "name": null,
  "checksum": "a1d548bca027b01d23b68e3ca2fcc8a4",
  "iid": 5899617468153856,
  "activity_revision": "1.0.0"
}