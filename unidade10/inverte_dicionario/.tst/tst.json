{
  "files": {
    "public_tests.py": {
      "category": "public",
      "data": "import unittest\nimport sys\n\nundertest = __import__(sys.argv[-1].split(\".py\")[0])\ninverte_dicionario = getattr(undertest, 'inverte_dicionario', None)\n\nclass PublicTests(unittest.TestCase):\n\n    def test_exemplo(self):\n        m = {\"a\": 2, \"b\": 3, \"c\": 2}\n        assert inverte_dicionario(m) == {\n          2: [\"a\", \"c\"],\n          3: [\"b\"]\n        }\n\nif __name__ == '__main__':\n    loader = unittest.TestLoader()\n    runner = unittest.TextTestRunner()\n    runner.run(loader.loadTestsFromModule(sys.modules[__name__]))\n",
      "name": "public_tests.py"
    },
    "inverte.py": {
      "category": "answer",
      "data": "# coding: utf-8\n# Aluno: Rodrigo Eloy Cavalcanti\n# Matr\u00edcula: 118210111\n# Inverte dicionario\n\ndef inverte_dicionario(d):\n    dicionario = {}\n\n    for (key, valor) in d.items():\n        if type(valor) == list:\n            for v in valor:\n                if dicionario.has_key(v):\n                    dicionario[v].append(key)\n            \n                else:\n\n                    dicionario[v] = [key]\n\n        else:\n            if dicionario.has_key(valor):\n                dicionario[valor].append(key)\n            \n            else:\n\n                dicionario[valor] = [key]\n\n    return dicionario\n\nm = {\"c\": [1, 2] , \"b\": 0}\n\nprint inverte_dicionario(m)",
      "name": "inverte.py"
    }
  },
  "kind": "assignment",
  "name": null,
  "checksum": "2c520872505b3ef05036355e4ae86148",
  "iid": 6392644481581056,
  "activity_revision": "1.1.0"
}