{
  "files": {
    "public_tests.py": {
      "category": "public",
      "data": "import unittest\nimport sys\n\nundertest = __import__(sys.argv[-1].split(\".py\")[0])\nnumero_disciplinas = getattr(undertest, 'numero_disciplinas', None)\n\nclass PublicTests(unittest.TestCase):\n\n   def teste1(self):\n        grade = {\"p1\": [], \"lp1\": [], \"ic\": [],\"calc1\": [], \"p2\": [\"ic\", \"p1\", \"lp1\"],\n        \"lp2\": [\"ic\", \"p1\", \"lp1\"], \"grafos\": [\"ic\", \"p1\", \"lp1\"], \"calc2\"  : [\"calc1\"], \n        \"edados\": [\"ic\", \"p1\", \"lp1\", \"p2\", \"lp2\", \"grafos\"],\n        \"leda\": [\"ic\", \"p1\", \"lp1\", \"p2\", \"lp2\", \"grafos\"]}\n\n        horarios= {\"p1\": \"s082\", \"lp1\": \"x082\", \"ic\": \"i142\", \"calc1\": \"q082\", \"p2\": \"t162\",\n        \"lp2\": \"s082\", \"grafos\": \"q082\", \"calc2\": \"x162\", \"edados\": \"x162\", \"leda\": \"t102\"}\n\n        assert numero_disciplinas(grade, horarios, []) == 4\n        assert numero_disciplinas(grade, horarios, [\"ic\", \"p1\", \"lp1\"]) == 3\n\nif __name__ == '__main__':\n    loader = unittest.TestLoader()\n    runner = unittest.TextTestRunner()\n    runner.run(loader.loadTestsFromModule(sys.modules[__name__]))\n",
      "name": "public_tests.py"
    },
    "numero.py": {
      "category": "answer",
      "data": "# coding: utf-8\n# Aluno: Rodrigo Eloy Cavalcanti\n# Matr\u00edcula: 118210111\n# N\u00famero de disciplinas\n\ndef comparador_listas(lista1, lista2):\n    contador = 0\n    for e in lista1:\n        for elemento in lista2:\n            if elemento == e:\n                contador += 1\n    \n    if contador == len(lista2):\n        return True\n    \n    return False\n\ndef my_in(lista, elemento):\n    for e in lista:\n        if e == elemento:\n            return True\n    return False\n\n\ndef numero_disciplinas(grade, horario, cadeiras_pagas):\n    lista_horarios = []\n    matriculaveis = 0\n    for cadeira, pre_requisitos in grade.items():\n        if comparador_listas(cadeiras_pagas, pre_requisitos) and\\\n         my_in(cadeiras_pagas, cadeira) == False:\n            matriculaveis += 1\n        \n            if my_in(lista_horarios, horario[cadeira]):\n                matriculaveis -= 1\n            lista_horarios.append(horario[cadeira])\n    \n    return matriculaveis",
      "name": "numero.py"
    }
  },
  "kind": "assignment",
  "name": null,
  "checksum": "776e309977f0bc514e82cf7e1076dc6c",
  "iid": 5825208501927936,
  "activity_revision": "1.0.0"
}